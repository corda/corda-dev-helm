# values for configuring bitnami/kafka sub-chart.
kafka:
  # -- enable/disable kafka.
  enabled: true
  # -- enable plaintext as a listener protocol.
  allowPlaintextListener: true
  # -- set a static replica count of kafka brokers.
  replicaCount: 3
  # -- enable/disable auto-creation of topics.
  autoCreateTopicsEnable: false
  # authentication configuration.
  auth:
    # -- protocol of the client listener.
    clientProtocol: plaintext
    # -- protocol of the interbroker listener used for replication.
    interBrokerProtocol: tls
    # tls configuration.
    tls:
      # -- type of the tls certificates.
      type: pem
      # -- autogenerate a CA, and signed certificates for each broker.
      autoGenerated: true
  # values configuring bitnami/zookeeper dependency of bitnami/kafka.
  zookeeper:
    # -- set a static replica count of zookeeper nodes.
    replicaCount: 3

# values for configuring bitnami/postgres sub-chart.
postgresql:
  # -- enable/disable postgres.
  enabled: true
  # values configuring the permissions of volumes.
  volumePermissions:
    # -- enable/disable an init container which changes ownership of the mounted volumes.
    enabled: true
  # Configuring TLS
  tls:
    # -- enable TLS for postgres. 
    enabled: true
    # enable auto signing 
    autoGenerated: true
  # auth configuration.
  auth:
    # -- name of database to be created.
    database: cordacluster
    # -- name of the user to be created.
    username: user
    # -- name of the password of the user to be created - defaults to generated value
    password:
  # primary (read/write instance) configuration.
  primary:
    # Custom init configuration..
    initdb:
      # -- ConfigMap-like object containing scripts to be executed on startup.
      # @default -- corda_user_init.sh
      scripts:
        corda_user_init.sh: |
          export PGPASSFILE=/tmp/pgpasswd$$
          touch $PGPASSFILE
          chmod 600 $PGPASSFILE
          trap "rm $PGPASSFILE" EXIT
          echo "localhost:${POSTGRES_PORT_NUMBER:-5432}:$POSTGRESQL_DATABASE:postgres:$POSTGRES_POSTGRES_PASSWORD" > $PGPASSFILE
          psql -v ON_ERROR_STOP=1 cordacluster <<-EOF
            ALTER ROLE "$POSTGRES_USER" NOSUPERUSER CREATEDB CREATEROLE INHERIT LOGIN;
          EOF
