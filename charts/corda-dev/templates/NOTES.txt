Kafka and PostgreSQL have been installed.

**WARNING** These are not intended for production use.

The following overrides should be used when installing a Corda Helm Chart into the same namespace:

bootstrap:
  kafka:
    replicas: 1
db:
  cluster:
    host: {{ include "corda-dev.postgresName" . | quote }}
    password:
      valueFrom:
        secretKeyRef:
          name: {{ include "corda-dev.postgresName" . | quote }}
          key: "password"
    username:
      value: "{{ .Values.postgresql.username }}"
kafka:
  bootstrapServers: {{ printf "%s:9092" ( include "corda-dev.kafkaName" . ) | quote }}
  sasl:
    enabled: true
    mechanism: "PLAIN"
    username:
      value: "admin"
    password:
      valueFrom:
        secretKeyRef:
          name: {{ include "corda-dev.kafkaName" . | quote }}
          key: "password"
  tls:
    enabled: true
    truststore:
      valueFrom:
        secretKeyRef:
          name: {{ include "corda-dev.kafkaName" . | quote }}
          key: "ca.crt"

To access PostgreSQL from outside the Kubernetes cluster:

kubectl port-forward -n {{ .Release.Namespace }} svc/{{ include "corda-dev.postgresName" . }} 5432 &
export PGUSER={{ .Values.postgresql.username }}
export PGPASSWORD=$(kubectl get secret -n {{ .Release.Namespace }} {{ include "corda-dev.postgresName" . }} -o go-template='{{ `{{` }} .data.password | base64decode {{ `}}` }}')
psql -h localhost -p 5432 -d {{ .Values.postgresql.database }}

To access Kafka from outside the Kubernetes cluster:

export KAFKA_PASSWORD=$(kubectl get secret -n {{ .Release.Namespace }} {{ include "corda-dev.kafkaName" . }} -o go-template='{{ `{{` }} index .data "admin-password" | base64decode {{ `}}` }}')
echo "security.protocol=SASL_PLAINTEXT" > client.properties
echo "sasl.mechanism=PLAIN" >> client.properties
echo "sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username=\"admin\" password=\"$KAFKA_PASSWORD\";" >> client.properties
kubectl port-forward -n {{ .Release.Namespace }} $(kubectl get pods -n {{ .Release.Namespace }} --selector=app.kubernetes.io/component=kafka,app.kubernetes.io/instance={{ .Release.Name }} -o=name) 9094 &
kafka-topics --list --bootstrap-server localhost:9094 --command-config client.properties