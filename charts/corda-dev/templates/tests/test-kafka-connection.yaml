{{- if .Values.kafka.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-kafka-connection-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  {{- include "kafka.imagePullSecrets" .Subcharts.kafka | nindent 2 }}
  containers:
    - name: {{ .Release.Name }}-kafka-connection-test
      image: {{ include "kafka.image" .Subcharts.kafka }}
      imagePullPolicy: {{ .Values.kafka.image.pullPolicy | quote }}
      {{- if .Values.kafka.containerSecurityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.kafka.containerSecurityContext.runAsUser }}
      {{- end }}
      {{- if eq .Values.kafka.auth.clientProtocol "sasl_tls" }}
      volumeMounts:
        - mountPath: "/certs"
          name: certs
          readOnly: true
      {{- end }}
      command:
        - kafka-topics.sh
        - --list
        - --bootstrap-server
        - {{ include "common.names.fullname" .Subcharts.kafka }}:{{ .Values.kafka.service.ports.client }}
        - --command-config
        - /tmp/config.properties
      lifecycle:
        postStart:
          exec:
            command: 
              - /bin/sh
              - -c 
            args:
              - |
                  touch /tmp/config.properties
                  {{- if eq .Values.kafka.clientProtocal "sasl_tls" }}
                  echo "security.protocol=SASL_SSL\n" >> /tmp/config.properties
                  {{- end }}
                  {{- if eq .Values.kafka.clientProtocal "tls" }}
                  echo "security.protocol=SSL\n" >> /tmp/config.properties
                  {{- end }}
                  {{- if eq .Values.kafka.clientProtocal "sasl" }}
                  echo "security.protocol=SASL_PLAINTEXT\n" >> /tmp/config.properties
                  {{- end }}
                  {{- if or (eq .Values.kafka.auth.clientProtocol "sasl_tls") (eq .Values.kafka.auth.clientProtocol "tls")  }}
                  echo "ssl.truststore.location=/certs/ca.crt\n" >> /tmp/config.properties
                  echo "ssl.truststore.type={{ .Values.kafka.tls.truststore.type | upper }}\n" >> /tmp/config.properties
                  {{- if .Values.kafka.tls.truststore.password }}
                  echo "ssl.truststore.password={{ .Values.kafka.tls.truststore.password }}\n" >> /tmp/config.properties
                  {{- end }}
                  {{- end }}
                  {{- if or (eq .Values.kafka.auth.clientProtocol "sasl_tls") (eq .Values.kafka.auth.clientProtocol "sasl")  }}
                  echo "sasl.mechanisms={{ .Values.kafka.sasl.mechanisms }}\n" >> /tmp/config.properties
                  echo "sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=\"{{ .Values.kafka.sasl.clientUsers[0] }}\" password=\"{{ .Values.kafka.jaas.sasl.clientPasswords[0] }}\" ;\n">> /tmp/config.properties
                  {{- end }}      
  {{- if or (eq .Values.kafka.auth.clientProtocol "sasl_tls") (eq .Values.kafka.auth.clientProtocol "tls")  }}
  volumes:
    - name: certs
      secret:
        secretName: {{ printf "%s-0-tls" (include "common.names.fullname" .Subcharts.kafka) }}
        items:
          - key: ca.crt
            path: ca.crt
  {{- end }}
  restartPolicy: Never
{{- end }}
