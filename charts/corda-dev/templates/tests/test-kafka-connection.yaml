{{- if .Values.kafka.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-kafka-connection-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  {{- include "kafka.imagePullSecrets" .Subcharts.kafka | nindent 2 }}
  containers:
    - name: {{ .Release.Name }}-kafka-connection-test
      image: {{ include "kafka.image" .Subcharts.kafka }}
      imagePullPolicy: {{ .Values.kafka.image.pullPolicy | quote }}
      {{- if .Values.kafka.controller.containerSecurityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.kafka.controller.containerSecurityContext.runAsUser }}
      {{- end }}
      {{- if or (eq .Values.kafka.listeners.client.protocol "SASL_SSL") (eq .Values.kafka.listeners.client.protocol "SSL")  }}
      volumeMounts:
        - mountPath: "/certs"
          name: certs
          readOnly: true
      {{- end }}
      command:
        - bash
        - -c
      args:
        - |
            touch /tmp/config.properties
            {{- if eq .Values.kafka.listeners.client.protocol "SASL_SSL" }}
            echo "security.protocol=SASL_SSL" >> /tmp/config.properties
            {{- end }}
            {{- if eq .Values.kafka.listeners.client.protocol "SSL" }}
            echo "security.protocol=SSL" >> /tmp/config.properties
            {{- end }}
            {{- if eq .Values.kafka.listeners.client.protocol "SASL" }}
            echo "security.protocol=SASL_PLAINTEXT" >> /tmp/config.properties
            {{- end }}
            {{- if or (eq .Values.kafka.listeners.client.protocol "SASL_SSL") (eq .Values.kafka.listeners.client.protocol "SSL")  }}
            echo "ssl.truststore.location=/certs/ca.crt" >> /tmp/config.properties
            echo "ssl.truststore.type={{ .Values.kafka.tls.type | upper }}" >> /tmp/config.properties
            {{- if .Values.kafka.tls.password }}
            echo "ssl.truststore.password={{ .Values.kafka.tls.password }}" >> /tmp/config.properties
            {{- end }}
            {{- end }}
            {{- if or (eq .Values.kafka.listeners.client.protocol "SASL_SSL") (eq .Values.kafka.listeners.client.protocol "SASL")  }}
            {{- if regexFind "scram-sha-256" .Values.kafka.sasl.mechanism }}
            echo "sasl.mechanism=SCRAM-SHA-256" >> /tmp/config.properties
            {{- else if regexFind "scram-sha-512" .Values.kafka.sasl.mechanism }}
            echo "sasl.mechanism=SCRAM-SHA-512" >> /tmp/config.properties
            {{- else }}
            echo "sasl.mechanism=PLAIN" >> /tmp/config.properties
            {{- end }}
            echo "sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=\"{{ first .Values.kafka.sasl.client.users }}\" password=\"${KAFKA_SASL_PASSWORDS%%,*}\";">> /tmp/config.properties
            {{- end }}
            cat /tmp/config.properties
            kafka-topics.sh --list --bootstrap-server {{ include "common.names.fullname" .Subcharts.kafka }}:{{ .Values.kafka.service.ports.client }} --command-config /tmp/config.properties
      {{- if or (eq .Values.kafka.listeners.client.protocol "SASL_SSL") (eq .Values.kafka.listeners.client.protocol "SASL")  }}
      env:
        - name: KAFKA_SASL_PASSWORDS
          valueFrom:
            secretKeyRef:
              name: {{ printf "%s-user-passwords" (include "common.names.fullname" .Subcharts.kafka) }}
              key: "client-passwords"
      {{- end }}
  {{- if or (eq .Values.kafka.listeners.client.protocol "SASL_SSL") (eq .Values.kafka.listeners.client.protocol "SSL")  }}
  volumes:
    - name: certs
      secret:
        secretName: {{ printf "%s-tls" (include "common.names.fullname" .Subcharts.kafka) }}
        items:
          - key: kafka-ca.crt
            path: ca.crt
  {{- end }}
  restartPolicy: Never
{{- end }}
